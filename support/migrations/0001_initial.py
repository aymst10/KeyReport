# Generated by Django 4.2.7 on 2025-08-16 15:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(max_length=20, unique=True, verbose_name='Request Number')),
                ('service_type', models.CharField(choices=[('installation', 'Installation'), ('maintenance', 'Maintenance'), ('repair', 'Repair'), ('training', 'Training'), ('consultation', 'Consultation'), ('other', 'Other')], max_length=20, verbose_name='Service Type')),
                ('title', models.CharField(max_length=200, verbose_name='Service Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('service_address', models.TextField(verbose_name='Service Address')),
                ('service_city', models.CharField(max_length=100, verbose_name='Service City')),
                ('service_state', models.CharField(max_length=100, verbose_name='Service State')),
                ('service_zip_code', models.CharField(max_length=20, verbose_name='Service ZIP Code')),
                ('preferred_date', models.DateField(verbose_name='Preferred Date')),
                ('preferred_time', models.TimeField(verbose_name='Preferred Time')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Estimated Cost')),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Actual Cost')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('assigned_technician', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['staff', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_services', to=settings.AUTH_USER_MODEL, verbose_name='Assigned Technician')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_requests', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Service Request',
                'verbose_name_plural': 'Service Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=20, unique=True, verbose_name='Ticket Number')),
                ('title', models.CharField(max_length=200, verbose_name='Ticket Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('ticket_type', models.CharField(choices=[('technical', 'Technical Issue'), ('billing', 'Billing Question'), ('product', 'Product Support'), ('service', 'Service Request'), ('general', 'General Inquiry')], default='general', max_length=20, verbose_name='Ticket Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20, verbose_name='Priority')),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('waiting_customer', 'Waiting for Customer'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolved At')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Closed At')),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['staff', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('related_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product', verbose_name='Related Product')),
            ],
            options={
                'verbose_name': 'Support Ticket',
                'verbose_name_plural': 'Support Tickets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Internal Note')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='support.supportticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Ticket Response',
                'verbose_name_plural': 'Ticket Responses',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateField(verbose_name='Scheduled Date')),
                ('scheduled_time', models.TimeField(verbose_name='Scheduled Time')),
                ('estimated_duration', models.PositiveIntegerField(help_text='Duration in minutes', verbose_name='Estimated Duration')),
                ('notes', models.TextField(blank=True, verbose_name='Schedule Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='support.servicerequest', verbose_name='Service Request')),
                ('technician', models.ForeignKey(limit_choices_to={'user_type__in': ['staff', 'admin']}, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_services', to=settings.AUTH_USER_MODEL, verbose_name='Technician')),
            ],
            options={
                'verbose_name': 'Service Schedule',
                'verbose_name_plural': 'Service Schedules',
                'ordering': ['scheduled_date', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Document Title')),
                ('document_type', models.CharField(choices=[('invoice', 'Invoice'), ('receipt', 'Receipt'), ('service_report', 'Service Report'), ('warranty', 'Warranty Document'), ('manual', 'User Manual'), ('other', 'Other')], max_length=20, verbose_name='Document Type')),
                ('file', models.FileField(upload_to='documents/', verbose_name='Document File')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.order', verbose_name='Related Order')),
                ('related_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support.servicerequest', verbose_name='Related Service')),
                ('related_ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='support.supportticket', verbose_name='Related Ticket')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['customer', 'status'], name='support_sup_custome_c8c9c7_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['assigned_to', 'status'], name='support_sup_assigne_87974a_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['priority', 'status'], name='support_sup_priorit_19dd91_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['ticket_type', 'status'], name='support_sup_ticket__5f37b8_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['customer', 'status'], name='support_ser_custome_3af21c_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['assigned_technician', 'status'], name='support_ser_assigne_208e37_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['service_type', 'status'], name='support_ser_service_1b4ab0_idx'),
        ),
        migrations.AddIndex(
            model_name='servicerequest',
            index=models.Index(fields=['preferred_date'], name='support_ser_preferr_27f61e_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['customer', 'document_type'], name='support_doc_custome_1d839c_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['document_type', 'created_at'], name='support_doc_documen_e77b80_idx'),
        ),
    ]
